package com.cliente.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cliente.entity.Cliente;
import com.cliente.entity.Endereco;
import com.cliente.entity.dto.EnderecoDTO;
import com.cliente.services.EnderecoServices;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping("/api/v1/endereco")
@Api(value = "API de Cadastro de clientes")
public class EnderecoController {
	
	@Autowired
	private EnderecoServices endServ;
	
	@PostMapping ("/{id}")
	@ApiOperation(value = "Salvar um endereço na base")
	public void salvaEnd(@RequestBody Endereco endereco, Cliente cliente) {
		endServ.salvaEndereco(endereco, cliente);
	}
	
	@GetMapping(value = "/lista")
	@ApiOperation(value = "Listar todos os endereços")
	public ResponseEntity<List<Endereco>> findAll(){
		List<Endereco> list = endServ.findAll();
		return ResponseEntity.ok(list);
	}
	
	@GetMapping (value = "/{id}")
	@ApiOperation(value = "Buscar endereço por id")
	public ResponseEntity<EnderecoDTO> buscarPorId(@PathVariable (name = "id", required = true) Long id)throws Exception {
		EnderecoDTO end = endServ.findById(id);
		return ResponseEntity.ok(end);
	}
	
	@ApiOperation(value = "Alteração de dados do endereço cadastrado")
	@PutMapping(value = "/{id}")
	public ResponseEntity <EnderecoDTO> update(@PathVariable ("id") Long id, @RequestBody Endereco endDTO) throws Exception {
		endServ.update(endDTO, id);
		return ResponseEntity.noContent().build();
	}
	
	@ApiOperation(value = "Deleta um endereço pelo id")
	@DeleteMapping(value = "/{id}")
	public String delete(@PathVariable ("id")Long id) {
		endServ.delete(id);
		return "Documento deletado com sucesso!";
	}
}
